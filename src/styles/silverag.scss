@import 'partials/mixins';

$ag-split: "[class*='ag-split']";

#{$ag-split} {
    /*
     * Justified alignment doesn't affect the last line of text. If there is 
     * only one line, it is the first and last line and won't be justified.
     *
     * Browsers that don't support text-align-last have a second line added by
     * inserting an ::after pseudo-element to force a second line allowing the
     * first line to be justified
     *
     * Since line-height affects multiple lines, setting line-height:0 removes 
     * the extra space created by the second line
     */
    line-height: 0;
    /* IE supports text-align-last */
    line-height: normal\9;
    text-align: justify;
    -moz-text-align-last: justify;
    /*
     * IE requires both text-align:justify and text-align-last:justify in order
     * to justify the last line, whereas, Firefox does not
     */
    -ms-text-align-last: justify;           
    /*
     * Setting a low negative letter-spacing value removes the white space 
     * between inline-block elements (cels) and may cause adjacent cels to 
     * overlap
     *
     * Using text-align:justify distributes cels evenly across their parent 
     * preventing cel overlap that may have been caused by negative letter 
     * spacing
     *
     * This allows two cels that have a width of 50%, for instance, to be flush 
     * with one another without wrapping
     */
    letter-spacing: -.334em;
    /* IE requires a smaller threshold */
    letter-spacing: -.34em\9;
}

#{$ag-split}[class~='ag-space:1'],
#{$ag-split}[class~='ag-space:2'],
#{$ag-split}[class~='ag-space:3'],
#{$ag-split}[class~='ag-space:4'],
#{$ag-split}[class~='ag-space:5'] {
    /*
     * Firefox doesn't align the last cels right edge in each line with the 
     * parent containers right edge if cel widths don't add up to 100% and the
     * letter-spacing value is less than -.25em
     * 
     * This applies to grid layouts and does not affect the last line
     * 
     * The value -.25em also yields more consistent results in webkit browsers
     * when setting smaller percentage widths to yield bigger gap sizes
     */
    letter-spacing: -.25em;
    /* IE */
    letter-spacing: -.34em\9;
}

/*
 * Browsers that don't support text-align-last will have a second line added by 
 * inserting an ::after pseudo-element to force a second line
 */
#{$ag-split}::after {
    content: '';
    display: inline-block;
    /* IE supports text-align-last */
    display: none\9;
    /* Force a second line */
    width: 100%;
    /* Remove extra space in webkit browsers */
    vertical-align: top;
}

@-moz-document url-prefix() {
    #{$ag-split} {
        /* Firefox supports text-align-last */
        line-height: normal;
    }
    #{$ag-split}::after {
        /* Firefox supports text-align-last */
        display: none;
    }
}

#{$ag-split} > .ag-cel {
    display: inline-block;
    @include boxSizing('border-box');
    /* IE bug fix to prevent wrapping when resizing */
    min-height: 100%;
    vertical-align: top;
    /* Reset the following */
    text-align: left;
    -moz-text-align-last: auto;
    -ms-text-align-last: auto;
    letter-spacing: normal;
}
.ag-cel {
    line-height: 1.5;
}


/* Alignment */

#{$ag-split}[class~='ag-align:t'] > .ag-cel {
    vertical-align: top;
}
#{$ag-split}[class~='ag-align:m'] > .ag-cel {
    vertical-align: middle;
}
#{$ag-split}[class~='ag-align:b'] > .ag-cel {
    vertical-align: bottom;
}


/* Direction */

#{$ag-split}.ag-flip {
    direction: rtl;
}
#{$ag-split}.ag-flip > .ag-cel {
    direction: ltr;
}


/* Vertical line rule */

.ag-line {
    display: inline-block;
    overflow: hidden;
    border-top-width: 0 !important;
    border-right-width: 0 !important;
    border-bottom-width: 0 !important;
    border: 1px solid #ccc;
    width: 0;
    vertical-align: top;
    visibility: hidden;
    opacity: 0;
    @include transition('opacity .5s');
}

/* The class ag-ready is added via JavaScript once a layout has been initialized */
.ag-ready > .ag-line {
    visibility: visible;
    opacity: 1;
}

/* 
 * The class ag-reflow is added via JavaScript temporarily while a layout is 
 * being resized
 */
.ag-reflow > .ag-line {
    min-height: 0 !important;
}


/* Layouts */

@import 'partials/layouts';


/* Responsive */

/* 
 * IE8 doesn't support media queries, so make sure cels that should be hidden
 * with ag-show are hidden 
 */
@media \0screen {
    #{$ag-split} > .ag-show {
        display: none;
    }
}

@import 'partials/respond';





